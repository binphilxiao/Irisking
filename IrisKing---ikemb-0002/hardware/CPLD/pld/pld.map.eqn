-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--un11_IRQ4 is un11_IRQ4
--operation mode is normal

un11_IRQ4 = wigend_bitcnt[1] # !un11_IRQ4_a # !wigend_bitcnt[3] # !wigend_bitcnt[4];


--AD_CS_1_i is AD_CS_1_i
--operation mode is normal

AD_CS_1_i = ADcnt[3] & (!ADcnt[4] # !ADcnt[2] # !ADcnt[1]) # !ADcnt[3] & (ADcnt[4]);


--un15_AD_CLK_x[0] is un15_AD_CLK_x[0]
--operation mode is normal

un15_AD_CLK_x[0] = clk & !ADcnt[3] & !ADcnt[4];


--wigend_reg[0] is wigend_reg[0]
--operation mode is normal

wigend_reg[0]_lut_out = !wil0_i;
wigend_reg[0] = DFFEAS(wigend_reg[0]_lut_out, wil_clk_x_i, nCPLDCE, , wigend_bitcnt53, , , , );


--wigend_reg[1] is wigend_reg[1]
--operation mode is normal

wigend_reg[1]_lut_out = wigend_buf[0];
wigend_reg[1] = DFFEAS(wigend_reg[1]_lut_out, wil_clk_x_i, nCPLDCE, , wigend_bitcnt53, , , , );


--wigend_reg[2] is wigend_reg[2]
--operation mode is normal

wigend_reg[2]_lut_out = wigend_buf[1];
wigend_reg[2] = DFFEAS(wigend_reg[2]_lut_out, wil_clk_x_i, nCPLDCE, , wigend_bitcnt53, , , , );


--wigend_reg[3] is wigend_reg[3]
--operation mode is normal

wigend_reg[3]_lut_out = wigend_buf[2];
wigend_reg[3] = DFFEAS(wigend_reg[3]_lut_out, wil_clk_x_i, nCPLDCE, , wigend_bitcnt53, , , , );


--wigend_bitcnt[4] is wigend_bitcnt[4]
--operation mode is normal

wigend_bitcnt[4]_carry_eqn = wigend_bitcnt_cout[3];
wigend_bitcnt[4]_lut_out = wigend_bitcnt[4] $ (!wigend_bitcnt[4]_carry_eqn);
wigend_bitcnt[4] = DFFEAS(wigend_bitcnt[4]_lut_out, wil_clk_x_i, nCPLDCE, , , , , !wigend_bitcnt52, );


--wigend_bitcnt[3] is wigend_bitcnt[3]
--operation mode is arithmetic

wigend_bitcnt[3]_carry_eqn = wigend_bitcnt_cout[2];
wigend_bitcnt[3]_lut_out = wigend_bitcnt[3] $ (wigend_bitcnt[3]_carry_eqn);
wigend_bitcnt[3] = DFFEAS(wigend_bitcnt[3]_lut_out, wil_clk_x_i, nCPLDCE, , , , , !wigend_bitcnt52, );

--wigend_bitcnt_cout[3] is wigend_bitcnt_cout[3]
--operation mode is arithmetic

wigend_bitcnt_cout[3] = CARRY(!wigend_bitcnt_cout[2] # !wigend_bitcnt[3]);


--wigend_bitcnt[1] is wigend_bitcnt[1]
--operation mode is arithmetic

wigend_bitcnt[1]_carry_eqn = wigend_bitcnt_cout[0];
wigend_bitcnt[1]_lut_out = wigend_bitcnt[1] $ (wigend_bitcnt[1]_carry_eqn);
wigend_bitcnt[1] = DFFEAS(wigend_bitcnt[1]_lut_out, wil_clk_x_i, nCPLDCE, , , , , !wigend_bitcnt52, );

--wigend_bitcnt_cout[1] is wigend_bitcnt_cout[1]
--operation mode is arithmetic

wigend_bitcnt_cout[1] = CARRY(!wigend_bitcnt_cout[0] # !wigend_bitcnt[1]);


--un11_IRQ4_a is un11_IRQ4_a
--operation mode is normal

un11_IRQ4_a = wigend_bitcnt[0] & !wigend_bitcnt[2];


--ADcnt[1] is ADcnt[1]
--operation mode is arithmetic

ADcnt[1]_carry_eqn = ADcnt_cout[0];
ADcnt[1]_lut_out = ADcnt[1] $ (ADcnt[1]_carry_eqn);
ADcnt[1] = DFFEAS(ADcnt[1]_lut_out, !clk, nCPLDCE, , , , , !ADcnt19_i, );

--ADcnt_cout[1] is ADcnt_cout[1]
--operation mode is arithmetic

ADcnt_cout[1] = CARRY(!ADcnt_cout[0] # !ADcnt[1]);


--ADcnt[2] is ADcnt[2]
--operation mode is arithmetic

ADcnt[2]_carry_eqn = ADcnt_cout[1];
ADcnt[2]_lut_out = ADcnt[2] $ (!ADcnt[2]_carry_eqn);
ADcnt[2] = DFFEAS(ADcnt[2]_lut_out, !clk, nCPLDCE, , , , , !ADcnt19_i, );

--ADcnt_cout[2] is ADcnt_cout[2]
--operation mode is arithmetic

ADcnt_cout[2] = CARRY(ADcnt[2] & (!ADcnt_cout[1]));


--ADcnt[3] is ADcnt[3]
--operation mode is arithmetic

ADcnt[3]_carry_eqn = ADcnt_cout[2];
ADcnt[3]_lut_out = ADcnt[3] $ (ADcnt[3]_carry_eqn);
ADcnt[3] = DFFEAS(ADcnt[3]_lut_out, !clk, nCPLDCE, , , , , !ADcnt19_i, );

--ADcnt_cout[3] is ADcnt_cout[3]
--operation mode is arithmetic

ADcnt_cout[3] = CARRY(!ADcnt_cout[2] # !ADcnt[3]);


--ADcnt[4] is ADcnt[4]
--operation mode is normal

ADcnt[4]_carry_eqn = ADcnt_cout[3];
ADcnt[4]_lut_out = ADcnt[4] $ (!ADcnt[4]_carry_eqn);
ADcnt[4] = DFFEAS(ADcnt[4]_lut_out, !clk, nCPLDCE, , , , , !ADcnt19_i, );


--wil_clk_x_i is wil_clk_x_i
--operation mode is normal

wil_clk_x_i = wil1_i # wil0_i;


--wil0_i is wil0_i
--operation mode is normal

wil0_i_lut_out = !wil[0];
wil0_i = DFFEAS(wil0_i_lut_out, clk, nCPLDCE, , , , , , );


--wigend_bitcnt53 is wigend_bitcnt53
--operation mode is normal

wigend_bitcnt53 = !overtime_i & !un11_IRQ4;


--wigend_buf[0] is wigend_buf[0]
--operation mode is normal

wigend_buf[0]_lut_out = !wil0_i & !overtime_i;
wigend_buf[0] = DFFEAS(wigend_buf[0]_lut_out, wil_clk_x_i, nCPLDCE, , , , , , );


--wigend_buf[1] is wigend_buf[1]
--operation mode is normal

wigend_buf[1]_lut_out = wigend_buf[0] & !overtime_i;
wigend_buf[1] = DFFEAS(wigend_buf[1]_lut_out, wil_clk_x_i, nCPLDCE, , , , , , );


--wigend_buf[2] is wigend_buf[2]
--operation mode is normal

wigend_buf[2]_lut_out = wigend_buf[1] & !overtime_i;
wigend_buf[2] = DFFEAS(wigend_buf[2]_lut_out, wil_clk_x_i, nCPLDCE, , , , , , );


--wigend_bitcnt52 is wigend_bitcnt52
--operation mode is normal

wigend_bitcnt52 = !overtime_i & un11_IRQ4;


--wigend_bitcnt[2] is wigend_bitcnt[2]
--operation mode is arithmetic

wigend_bitcnt[2]_carry_eqn = wigend_bitcnt_cout[1];
wigend_bitcnt[2]_lut_out = wigend_bitcnt[2] $ (!wigend_bitcnt[2]_carry_eqn);
wigend_bitcnt[2] = DFFEAS(wigend_bitcnt[2]_lut_out, wil_clk_x_i, nCPLDCE, , , , , !wigend_bitcnt52, );

--wigend_bitcnt_cout[2] is wigend_bitcnt_cout[2]
--operation mode is arithmetic

wigend_bitcnt_cout[2] = CARRY(wigend_bitcnt[2] & (!wigend_bitcnt_cout[1]));


--wigend_bitcnt[0] is wigend_bitcnt[0]
--operation mode is arithmetic

wigend_bitcnt[0]_lut_out = !wigend_bitcnt[0];
wigend_bitcnt[0] = DFFEAS(wigend_bitcnt[0]_lut_out, wil_clk_x_i, nCPLDCE, , , , , !wigend_bitcnt52, );

--wigend_bitcnt_cout[0] is wigend_bitcnt_cout[0]
--operation mode is arithmetic

wigend_bitcnt_cout[0] = CARRY(wigend_bitcnt[0]);


--ADcnt19_i is ADcnt19_i
--operation mode is normal

ADcnt19_i = !ADcnt[4] # !ADcnt[3] # !ADcnt[2] # !ADcnt[1];


--ADcnt[0] is ADcnt[0]
--operation mode is arithmetic

ADcnt[0]_lut_out = !ADcnt[0];
ADcnt[0] = DFFEAS(ADcnt[0]_lut_out, !clk, nCPLDCE, , , , , !ADcnt19_i, );

--ADcnt_cout[0] is ADcnt_cout[0]
--operation mode is arithmetic

ADcnt_cout[0] = CARRY(ADcnt[0]);


--wil1_i is wil1_i
--operation mode is normal

wil1_i_lut_out = !wil[1];
wil1_i = DFFEAS(wil1_i_lut_out, clk, nCPLDCE, , , , , , );


--overtime_i is overtime_i
--operation mode is normal

overtime_i_lut_out = un1_wilclk_cnt124_i & (overtime_i) # !un1_wilclk_cnt124_i & wilclk_cnt125_x;
overtime_i = DFFEAS(overtime_i_lut_out, clk, nCPLDCE, , , , , , );


--un1_wilclk_cnt124_i is un1_wilclk_cnt124_i
--operation mode is normal

un1_wilclk_cnt124_i = wilclk_cnt125_x & (un1_wilclk_cnt124_a # !un1_wilclk_cnt1_1_7 # !un1_wilclk_cnt1_1_6);


--wilclk_cnt125_x is wilclk_cnt125_x
--operation mode is normal

wilclk_cnt125_x = wil[1] & wil[0];


--un1_wilclk_cnt1_1_6 is un1_wilclk_cnt1_1_6
--operation mode is normal

un1_wilclk_cnt1_1_6 = !wilclk_cnt1[2] & !wilclk_cnt1[4] & wilclk_cnt1[12] & !wilclk_cnt1[1];


--un1_wilclk_cnt1_1_7 is un1_wilclk_cnt1_1_7
--operation mode is normal

un1_wilclk_cnt1_1_7 = !wilclk_cnt1[10] & !wilclk_cnt1[11] & !wilclk_cnt1[5] & !wilclk_cnt1[6];


--un1_wilclk_cnt124_a is un1_wilclk_cnt124_a
--operation mode is normal

un1_wilclk_cnt124_a = !wilclk_cnt1[9] # !wilclk_cnt1[8] # !wilclk_cnt1[7] # !wilclk_cnt1[3];


--wilclk_cnt1[2] is wilclk_cnt1[2]
--operation mode is arithmetic

wilclk_cnt1[2]_carry_eqn = wilclk_cnt1_cout[1];
wilclk_cnt1[2]_lut_out = wilclk_cnt1[2] $ (!wilclk_cnt1[2]_carry_eqn);
wilclk_cnt1[2] = DFFEAS(wilclk_cnt1[2]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[2] is wilclk_cnt1_cout[2]
--operation mode is arithmetic

wilclk_cnt1_cout[2] = CARRY(wilclk_cnt1[2] & (!wilclk_cnt1_cout[1]));


--wilclk_cnt1[4] is wilclk_cnt1[4]
--operation mode is arithmetic

wilclk_cnt1[4]_carry_eqn = wilclk_cnt1_cout[3];
wilclk_cnt1[4]_lut_out = wilclk_cnt1[4] $ (!wilclk_cnt1[4]_carry_eqn);
wilclk_cnt1[4] = DFFEAS(wilclk_cnt1[4]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[4] is wilclk_cnt1_cout[4]
--operation mode is arithmetic

wilclk_cnt1_cout[4] = CARRY(wilclk_cnt1[4] & (!wilclk_cnt1_cout[3]));


--wilclk_cnt1[12] is wilclk_cnt1[12]
--operation mode is normal

wilclk_cnt1[12]_carry_eqn = wilclk_cnt1_cout[11];
wilclk_cnt1[12]_lut_out = wilclk_cnt1[12] $ (!wilclk_cnt1[12]_carry_eqn);
wilclk_cnt1[12] = DFFEAS(wilclk_cnt1[12]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );


--wilclk_cnt1[1] is wilclk_cnt1[1]
--operation mode is arithmetic

wilclk_cnt1[1]_carry_eqn = wilclk_cnt1_cout[0];
wilclk_cnt1[1]_lut_out = wilclk_cnt1[1] $ (wilclk_cnt1[1]_carry_eqn);
wilclk_cnt1[1] = DFFEAS(wilclk_cnt1[1]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[1] is wilclk_cnt1_cout[1]
--operation mode is arithmetic

wilclk_cnt1_cout[1] = CARRY(!wilclk_cnt1_cout[0] # !wilclk_cnt1[1]);


--wilclk_cnt1[10] is wilclk_cnt1[10]
--operation mode is arithmetic

wilclk_cnt1[10]_carry_eqn = wilclk_cnt1_cout[9];
wilclk_cnt1[10]_lut_out = wilclk_cnt1[10] $ (!wilclk_cnt1[10]_carry_eqn);
wilclk_cnt1[10] = DFFEAS(wilclk_cnt1[10]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[10] is wilclk_cnt1_cout[10]
--operation mode is arithmetic

wilclk_cnt1_cout[10] = CARRY(wilclk_cnt1[10] & (!wilclk_cnt1_cout[9]));


--wilclk_cnt1[11] is wilclk_cnt1[11]
--operation mode is arithmetic

wilclk_cnt1[11]_carry_eqn = wilclk_cnt1_cout[10];
wilclk_cnt1[11]_lut_out = wilclk_cnt1[11] $ (wilclk_cnt1[11]_carry_eqn);
wilclk_cnt1[11] = DFFEAS(wilclk_cnt1[11]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[11] is wilclk_cnt1_cout[11]
--operation mode is arithmetic

wilclk_cnt1_cout[11] = CARRY(!wilclk_cnt1_cout[10] # !wilclk_cnt1[11]);


--wilclk_cnt1[5] is wilclk_cnt1[5]
--operation mode is arithmetic

wilclk_cnt1[5]_carry_eqn = wilclk_cnt1_cout[4];
wilclk_cnt1[5]_lut_out = wilclk_cnt1[5] $ (wilclk_cnt1[5]_carry_eqn);
wilclk_cnt1[5] = DFFEAS(wilclk_cnt1[5]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[5] is wilclk_cnt1_cout[5]
--operation mode is arithmetic

wilclk_cnt1_cout[5] = CARRY(!wilclk_cnt1_cout[4] # !wilclk_cnt1[5]);


--wilclk_cnt1[6] is wilclk_cnt1[6]
--operation mode is arithmetic

wilclk_cnt1[6]_carry_eqn = wilclk_cnt1_cout[5];
wilclk_cnt1[6]_lut_out = wilclk_cnt1[6] $ (!wilclk_cnt1[6]_carry_eqn);
wilclk_cnt1[6] = DFFEAS(wilclk_cnt1[6]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[6] is wilclk_cnt1_cout[6]
--operation mode is arithmetic

wilclk_cnt1_cout[6] = CARRY(wilclk_cnt1[6] & (!wilclk_cnt1_cout[5]));


--wilclk_cnt1[3] is wilclk_cnt1[3]
--operation mode is arithmetic

wilclk_cnt1[3]_carry_eqn = wilclk_cnt1_cout[2];
wilclk_cnt1[3]_lut_out = wilclk_cnt1[3] $ (wilclk_cnt1[3]_carry_eqn);
wilclk_cnt1[3] = DFFEAS(wilclk_cnt1[3]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[3] is wilclk_cnt1_cout[3]
--operation mode is arithmetic

wilclk_cnt1_cout[3] = CARRY(!wilclk_cnt1_cout[2] # !wilclk_cnt1[3]);


--wilclk_cnt1[7] is wilclk_cnt1[7]
--operation mode is arithmetic

wilclk_cnt1[7]_carry_eqn = wilclk_cnt1_cout[6];
wilclk_cnt1[7]_lut_out = wilclk_cnt1[7] $ (wilclk_cnt1[7]_carry_eqn);
wilclk_cnt1[7] = DFFEAS(wilclk_cnt1[7]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[7] is wilclk_cnt1_cout[7]
--operation mode is arithmetic

wilclk_cnt1_cout[7] = CARRY(!wilclk_cnt1_cout[6] # !wilclk_cnt1[7]);


--wilclk_cnt1[8] is wilclk_cnt1[8]
--operation mode is arithmetic

wilclk_cnt1[8]_carry_eqn = wilclk_cnt1_cout[7];
wilclk_cnt1[8]_lut_out = wilclk_cnt1[8] $ (!wilclk_cnt1[8]_carry_eqn);
wilclk_cnt1[8] = DFFEAS(wilclk_cnt1[8]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[8] is wilclk_cnt1_cout[8]
--operation mode is arithmetic

wilclk_cnt1_cout[8] = CARRY(wilclk_cnt1[8] & (!wilclk_cnt1_cout[7]));


--wilclk_cnt1[9] is wilclk_cnt1[9]
--operation mode is arithmetic

wilclk_cnt1[9]_carry_eqn = wilclk_cnt1_cout[8];
wilclk_cnt1[9]_lut_out = wilclk_cnt1[9] $ (wilclk_cnt1[9]_carry_eqn);
wilclk_cnt1[9] = DFFEAS(wilclk_cnt1[9]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[9] is wilclk_cnt1_cout[9]
--operation mode is arithmetic

wilclk_cnt1_cout[9] = CARRY(!wilclk_cnt1_cout[8] # !wilclk_cnt1[9]);


--wilclk_cnt1[0] is wilclk_cnt1[0]
--operation mode is arithmetic

wilclk_cnt1[0]_lut_out = !wilclk_cnt1[0];
wilclk_cnt1[0] = DFFEAS(wilclk_cnt1[0]_lut_out, clk, nCPLDCE, , , , , !un1_wilclk_cnt124_i, );

--wilclk_cnt1_cout[0] is wilclk_cnt1_cout[0]
--operation mode is arithmetic

wilclk_cnt1_cout[0] = CARRY(wilclk_cnt1[0]);


--nNANDFWE is nNANDFWE
--operation mode is input

nNANDFWE = INPUT();


--nOE_nFRE is nOE_nFRE
--operation mode is input

nOE_nFRE = INPUT();


--nHRESET is nHRESET
--operation mode is input

nHRESET = INPUT();


--addr[0] is addr[0]
--operation mode is input

addr[0] = INPUT();


--addr[1] is addr[1]
--operation mode is input

addr[1] = INPUT();


--addr[2] is addr[2]
--operation mode is input

addr[2] = INPUT();


--addr[3] is addr[3]
--operation mode is input

addr[3] = INPUT();


--addr[4] is addr[4]
--operation mode is input

addr[4] = INPUT();


--addr[5] is addr[5]
--operation mode is input

addr[5] = INPUT();


--addr[6] is addr[6]
--operation mode is input

addr[6] = INPUT();


--data[0] is data[0]
--operation mode is input

data[0] = INPUT();


--data[1] is data[1]
--operation mode is input

data[1] = INPUT();


--data[2] is data[2]
--operation mode is input

data[2] = INPUT();


--data[3] is data[3]
--operation mode is input

data[3] = INPUT();


--data[4] is data[4]
--operation mode is input

data[4] = INPUT();


--data[5] is data[5]
--operation mode is input

data[5] = INPUT();


--data[6] is data[6]
--operation mode is input

data[6] = INPUT();


--data[7] is data[7]
--operation mode is input

data[7] = INPUT();


--AD_DOO is AD_DOO
--operation mode is input

AD_DOO = INPUT();


--IRQ4 is IRQ4
--operation mode is output

IRQ4 = OUTPUT(un11_IRQ4);


--AD_CS is AD_CS
--operation mode is output

AD_CS = OUTPUT(AD_CS_1_i);


--AD_CLK is AD_CLK
--operation mode is output

AD_CLK = OUTPUT(un15_AD_CLK_x[0]);


--test[0] is test[0]
--operation mode is output

test[0] = OUTPUT(wigend_reg[0]);


--test[1] is test[1]
--operation mode is output

test[1] = OUTPUT(wigend_reg[1]);


--test[2] is test[2]
--operation mode is output

test[2] = OUTPUT(wigend_reg[2]);


--test[3] is test[3]
--operation mode is output

test[3] = OUTPUT(wigend_reg[3]);


--clk is clk
--operation mode is input

clk = INPUT();


--nCPLDCE is nCPLDCE
--operation mode is input

nCPLDCE = INPUT();


--wil[0] is wil[0]
--operation mode is input

wil[0] = INPUT();


--wil[1] is wil[1]
--operation mode is input

wil[1] = INPUT();


