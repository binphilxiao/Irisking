-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L61 is clock~2
A1L61_or_out = clock;
A1L61 = A1L61_or_out;


--A1L86 is vp2ctl0~2
A1L86_or_out = vp2ctl0;
A1L86 = A1L86_or_out;


--A1L03 is hpirdy~2
A1L03_or_out = !hpirdy;
A1L03 = A1L03_or_out;


--A1L66 is vp2clk1~2
A1L66_or_out = !vp2clk1;
A1L66 = A1L66_or_out;


--wil0_i_0 is wil0_i_0
wil0_i_0_p1_out = wil[1] & !wil[0];
wil0_i_0_or_out = wil0_i_0_p1_out;
wil0_i_0_reg_input = wil0_i_0_or_out;
wil0_i_0 = DFFE(wil0_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wil1_i_0 is wil1_i_0
wil1_i_0_p1_out = !wil[1] & wil[0];
wil1_i_0_or_out = wil1_i_0_p1_out;
wil1_i_0_reg_input = wil1_i_0_or_out;
wil1_i_0 = DFFE(wil1_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wil_clk_tmp_i_0 is wil_clk_tmp_i_0
wil_clk_tmp_i_0_or_out = wil[0];
wil_clk_tmp_i_0_reg_input = wil[1] $ wil_clk_tmp_i_0_or_out;
wil_clk_tmp_i_0 = DFFE(wil_clk_tmp_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_0_ is wilclk_cnt_0_
wilclk_cnt_0__p0_out = !wilclk_cnt_0_ & !wil[1] & wil[0];
wilclk_cnt_0__p1_out = wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_6_ & wilclk_cnt_12_ & !wilclk_cnt_0_;
wilclk_cnt_0__p2_out = wilclk_cnt_12_ & !wilclk_cnt_0_ & wilclk_cnt_10_;
wilclk_cnt_0__p3_out = wilclk_cnt_12_ & !wilclk_cnt_0_ & wilclk_cnt_11_;
wilclk_cnt_0__p4_out = !wilclk_cnt_0_ & wil[1] & !wil[0];
wilclk_cnt_0__or_out = A1L841 # wilclk_cnt_0__p0_out # wilclk_cnt_0__p1_out # wilclk_cnt_0__p2_out # wilclk_cnt_0__p3_out # wilclk_cnt_0__p4_out;
wilclk_cnt_0__reg_input = !wilclk_cnt_0__or_out;
wilclk_cnt_0_ = TFFE(wilclk_cnt_0__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wil_clk_i_0 is wil_clk_i_0
wil_clk_i_0_or_out = wil_clk_tmp_i_0;
wil_clk_i_0_reg_input = wil_clk_i_0_or_out;
wil_clk_i_0 = DFFE(wil_clk_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--A1L21 is BUFDIR_buf~5
A1L21_p1_out = nFRE & nOE;
A1L21_or_out = A1L21_p1_out;
A1L21 = A1L21_or_out;


--A1L11 is BUFDIR_1_i~5
A1L11_p1_out = nFRE & nOE;
A1L11_or_out = A1L11_p1_out;
A1L11 = A1L11_or_out;


--A1L33 is nEXTBUS_0_a3~5
A1L33_p1_out = nFRE & nFCE & nFWE & nGCS[0] & nGCS[1] & nGCS[2] & nGCS[3] & nGCS[4];
A1L33_or_out = A1L33_p1_out;
A1L33 = A1L33_or_out;


--un1_nGCS_i_0_ is un1_nGCS_i_0_
un1_nGCS_i_0__p1_out = !addr[2] & !nOE & !nGCS[3] & !addr[3] & addr[4] & !addr[5] & !addr[6] & !addr[7] & !addr[8];
un1_nGCS_i_0__p2_out = addr[2] & !nOE & !nGCS[3] & !addr[4] & !addr[5] & !addr[6] & !addr[7] & !addr[8];
un1_nGCS_i_0__p3_out = !nOE & !nGCS[3] & addr[3] & !addr[4] & !addr[5] & !addr[6] & !addr[7] & !addr[8];
un1_nGCS_i_0__or_out = un1_nGCS_i_0__p1_out # un1_nGCS_i_0__p2_out # un1_nGCS_i_0__p3_out;
un1_nGCS_i_0_ = un1_nGCS_i_0__or_out;


--wilclk_cnt_1_ is wilclk_cnt_1_
wilclk_cnt_1__p0_out = wilclk_cnt_0_ & wilclk_cnt_1_;
wilclk_cnt_1__p1_out = wilclk_cnt_11_ & wilclk_cnt_12_;
wilclk_cnt_1__p2_out = !wilclk_cnt_0_ & !wilclk_cnt_1_;
wilclk_cnt_1__p3_out = wil[1] & !wil[0];
wilclk_cnt_1__p4_out = !wil[1] & wil[0];
wilclk_cnt_1__or_out = A1L941 # wilclk_cnt_1__p0_out # wilclk_cnt_1__p1_out # wilclk_cnt_1__p2_out # wilclk_cnt_1__p3_out # wilclk_cnt_1__p4_out;
wilclk_cnt_1__reg_input = !(wilclk_cnt_1__or_out);
wilclk_cnt_1_ = DFFE(wilclk_cnt_1__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_2_ is wilclk_cnt_2_
wilclk_cnt_2__p0_out = wilclk_cnt_0_ & wilclk_cnt_2_ & wilclk_cnt_1_;
wilclk_cnt_2__p1_out = wil[1] & !wil[0];
wilclk_cnt_2__p2_out = !wil[1] & wil[0];
wilclk_cnt_2__p3_out = !wilclk_cnt_0_ & !wilclk_cnt_2_;
wilclk_cnt_2__p4_out = !wilclk_cnt_2_ & !wilclk_cnt_1_;
wilclk_cnt_2__or_out = A1L151 # wilclk_cnt_2__p0_out # wilclk_cnt_2__p1_out # wilclk_cnt_2__p2_out # wilclk_cnt_2__p3_out # wilclk_cnt_2__p4_out;
wilclk_cnt_2__reg_input = !(wilclk_cnt_2__or_out);
wilclk_cnt_2_ = DFFE(wilclk_cnt_2__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--A1L251 is wilclk_cnt_n3_m1~5
A1L251_p1_out = wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L251_or_out = wilclk_cnt_3_;
A1L251 = A1L251_p1_out $ A1L251_or_out;


--wilclk_cnt_3_ is wilclk_cnt_3_
wilclk_cnt_3__p1_out = !un1_wilclk_cntlto12_i & !wil[1] & !wil[0];
wilclk_cnt_3__p2_out = !wil[1] & !wil[0] & A1L251;
wilclk_cnt_3__p3_out = !un1_wilclk_cntlto12_i & wil[1] & wil[0];
wilclk_cnt_3__p4_out = wil[1] & wil[0] & A1L251;
wilclk_cnt_3__or_out = wilclk_cnt_3__p1_out # wilclk_cnt_3__p2_out # wilclk_cnt_3__p3_out # wilclk_cnt_3__p4_out;
wilclk_cnt_3__reg_input = wilclk_cnt_3__or_out;
wilclk_cnt_3_ = DFFE(wilclk_cnt_3__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_4_ is wilclk_cnt_4_
wilclk_cnt_4__p0_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_;
wilclk_cnt_4__p1_out = !wil[1] & wil[0];
wilclk_cnt_4__p2_out = wil[1] & !wil[0];
wilclk_cnt_4__p3_out = wilclk_cnt_12_ & wilclk_cnt_11_;
wilclk_cnt_4__p4_out = wilclk_cnt_12_ & wilclk_cnt_10_;
wilclk_cnt_4__or_out = A1L351 # wilclk_cnt_4__p0_out # wilclk_cnt_4__p1_out # wilclk_cnt_4__p2_out # wilclk_cnt_4__p3_out # wilclk_cnt_4__p4_out;
wilclk_cnt_4__reg_input = !(wilclk_cnt_4__or_out);
wilclk_cnt_4_ = DFFE(wilclk_cnt_4__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_5_ is wilclk_cnt_5_
wilclk_cnt_5__p0_out = wilclk_cnt_12_ & wilclk_cnt_11_;
wilclk_cnt_5__p1_out = !wil[1] & wil[0];
wilclk_cnt_5__p2_out = wil[1] & !wil[0];
wilclk_cnt_5__p3_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_;
wilclk_cnt_5__p4_out = !wilclk_cnt_5_ & !wilclk_cnt_4_;
wilclk_cnt_5__or_out = A1L551 # wilclk_cnt_5__p0_out # wilclk_cnt_5__p1_out # wilclk_cnt_5__p2_out # wilclk_cnt_5__p3_out # wilclk_cnt_5__p4_out;
wilclk_cnt_5__reg_input = !(wilclk_cnt_5__or_out);
wilclk_cnt_5_ = DFFE(wilclk_cnt_5__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_6_ is wilclk_cnt_6_
wilclk_cnt_6__p0_out = !wilclk_cnt_6_ & !wilclk_cnt_4_;
wilclk_cnt_6__p1_out = !wil[1] & wil[0];
wilclk_cnt_6__p2_out = wil[1] & !wil[0];
wilclk_cnt_6__p3_out = wilclk_cnt_12_ & wilclk_cnt_10_;
wilclk_cnt_6__p4_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_;
wilclk_cnt_6__or_out = A1L751 # wilclk_cnt_6__p0_out # wilclk_cnt_6__p1_out # wilclk_cnt_6__p2_out # wilclk_cnt_6__p3_out # wilclk_cnt_6__p4_out;
wilclk_cnt_6__reg_input = !(wilclk_cnt_6__or_out);
wilclk_cnt_6_ = DFFE(wilclk_cnt_6__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--A1L851 is wilclk_cnt_n7_m1~5
A1L851_p1_out = wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L851_or_out = wilclk_cnt_7_;
A1L851 = A1L851_p1_out $ A1L851_or_out;


--wilclk_cnt_7_ is wilclk_cnt_7_
wilclk_cnt_7__p1_out = !un1_wilclk_cntlto12_i & !wil[1] & !wil[0];
wilclk_cnt_7__p2_out = !wil[1] & !wil[0] & A1L851;
wilclk_cnt_7__p3_out = !un1_wilclk_cntlto12_i & wil[1] & wil[0];
wilclk_cnt_7__p4_out = wil[1] & wil[0] & A1L851;
wilclk_cnt_7__or_out = wilclk_cnt_7__p1_out # wilclk_cnt_7__p2_out # wilclk_cnt_7__p3_out # wilclk_cnt_7__p4_out;
wilclk_cnt_7__reg_input = wilclk_cnt_7__or_out;
wilclk_cnt_7_ = DFFE(wilclk_cnt_7__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--A1L951 is wilclk_cnt_n8_m1~5
A1L951_p1_out = wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L951_or_out = wilclk_cnt_8_;
A1L951 = A1L951_p1_out $ A1L951_or_out;


--wilclk_cnt_8_ is wilclk_cnt_8_
wilclk_cnt_8__p1_out = !un1_wilclk_cntlto12_i & !wil[1] & !wil[0];
wilclk_cnt_8__p2_out = !wil[1] & !wil[0] & A1L951;
wilclk_cnt_8__p3_out = !un1_wilclk_cntlto12_i & wil[1] & wil[0];
wilclk_cnt_8__p4_out = wil[1] & wil[0] & A1L951;
wilclk_cnt_8__or_out = wilclk_cnt_8__p1_out # wilclk_cnt_8__p2_out # wilclk_cnt_8__p3_out # wilclk_cnt_8__p4_out;
wilclk_cnt_8__reg_input = wilclk_cnt_8__or_out;
wilclk_cnt_8_ = DFFE(wilclk_cnt_8__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--A1L061 is wilclk_cnt_n9_m1~5
A1L061_p1_out = wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L061_or_out = wilclk_cnt_9_;
A1L061 = A1L061_p1_out $ A1L061_or_out;


--wilclk_cnt_9_ is wilclk_cnt_9_
wilclk_cnt_9__p1_out = !un1_wilclk_cntlto12_i & !wil[1] & !wil[0];
wilclk_cnt_9__p2_out = !wil[1] & !wil[0] & A1L061;
wilclk_cnt_9__p3_out = !un1_wilclk_cntlto12_i & wil[1] & wil[0];
wilclk_cnt_9__p4_out = wil[1] & wil[0] & A1L061;
wilclk_cnt_9__or_out = wilclk_cnt_9__p1_out # wilclk_cnt_9__p2_out # wilclk_cnt_9__p3_out # wilclk_cnt_9__p4_out;
wilclk_cnt_9__reg_input = wilclk_cnt_9__or_out;
wilclk_cnt_9_ = DFFE(wilclk_cnt_9__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_11_ is wilclk_cnt_11_
wilclk_cnt_11__p0_out = wilclk_cnt_12_ & wilclk_cnt_11_;
wilclk_cnt_11__p1_out = wilclk_cnt_10_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_ & !wilclk_cnt_12_ & !wil[0] & !wil[1];
wilclk_cnt_11__p2_out = wil[0] & !wil[1] & wilclk_cnt_11_;
wilclk_cnt_11__p3_out = !wil[0] & wil[1] & wilclk_cnt_11_;
wilclk_cnt_11__p4_out = wilclk_cnt_10_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_ & !wilclk_cnt_12_ & wil[0] & wil[1];
wilclk_cnt_11__or_out = A1L261 # wilclk_cnt_11__p0_out # wilclk_cnt_11__p1_out # wilclk_cnt_11__p2_out # wilclk_cnt_11__p3_out # wilclk_cnt_11__p4_out;
wilclk_cnt_11__reg_input = wilclk_cnt_11__or_out;
wilclk_cnt_11_ = TFFE(wilclk_cnt_11__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_10_ is wilclk_cnt_10_
wilclk_cnt_10__p0_out = wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_ & wilclk_cnt_10_;
wilclk_cnt_10__p1_out = !wilclk_cnt_12_ & !wil[0] & !wil[1] & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
wilclk_cnt_10__p2_out = wil[0] & !wil[1] & wilclk_cnt_10_;
wilclk_cnt_10__p3_out = !wil[0] & wil[1] & wilclk_cnt_10_;
wilclk_cnt_10__p4_out = !wilclk_cnt_12_ & wil[0] & wil[1] & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
wilclk_cnt_10__or_out = A1L161 # wilclk_cnt_10__p0_out # wilclk_cnt_10__p1_out # wilclk_cnt_10__p2_out # wilclk_cnt_10__p3_out # wilclk_cnt_10__p4_out;
wilclk_cnt_10__reg_input = wilclk_cnt_10__or_out;
wilclk_cnt_10_ = TFFE(wilclk_cnt_10__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wilclk_cnt_12_ is wilclk_cnt_12_
wilclk_cnt_12__p1_out = !wil[1] & !wil[0] & wilclk_cnt_12_;
wilclk_cnt_12__p2_out = wil[1] & wil[0] & wilclk_cnt_12_;
wilclk_cnt_12__p3_out = !wil[1] & !wil[0] & wilclk_cnt_10_ & wilclk_cnt_11_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
wilclk_cnt_12__p4_out = wil[1] & wil[0] & wilclk_cnt_10_ & wilclk_cnt_11_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
wilclk_cnt_12__or_out = wilclk_cnt_12__p1_out # wilclk_cnt_12__p2_out # wilclk_cnt_12__p3_out # wilclk_cnt_12__p4_out;
wilclk_cnt_12__reg_input = wilclk_cnt_12__or_out;
wilclk_cnt_12_ = DFFE(wilclk_cnt_12__reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--un1_wilclk_cntlto12_i is un1_wilclk_cntlto12_i
un1_wilclk_cntlto12_i_p1_out = !wilclk_cnt_3_ & !wilclk_cnt_4_ & !wilclk_cnt_5_ & !wilclk_cnt_6_ & !wilclk_cnt_10_ & !wilclk_cnt_11_;
un1_wilclk_cntlto12_i_p2_out = !wilclk_cnt_10_ & !wilclk_cnt_11_ & !wilclk_cnt_7_;
un1_wilclk_cntlto12_i_p3_out = !wilclk_cnt_10_ & !wilclk_cnt_11_ & !wilclk_cnt_8_;
un1_wilclk_cntlto12_i_p4_out = !wilclk_cnt_10_ & !wilclk_cnt_11_ & !wilclk_cnt_9_;
un1_wilclk_cntlto12_i_or_out = !wilclk_cnt_12_ # un1_wilclk_cntlto12_i_p1_out # un1_wilclk_cntlto12_i_p2_out # un1_wilclk_cntlto12_i_p3_out # un1_wilclk_cntlto12_i_p4_out;
un1_wilclk_cntlto12_i = un1_wilclk_cntlto12_i_or_out;


--overtime_i_0 is overtime_i_0
overtime_i_0_p1_out = wil[1] & !wil[0];
overtime_i_0_p2_out = !wil[1] & wil[0];
overtime_i_0_or_out = overtime_i_0_p1_out # overtime_i_0_p2_out # un1_wilclk_cntlto12_i;
overtime_i_0_reg_input = !(overtime_i_0_or_out);
overtime_i_0 = DFFE(overtime_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--overtime_delay1_i is overtime_delay1_i
overtime_delay1_i_or_out = overtime_i_0;
overtime_delay1_i_reg_input = overtime_delay1_i_or_out;
overtime_delay1_i = DFFE(overtime_delay1_i_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--overtime_delay2_i_0 is overtime_delay2_i_0
overtime_delay2_i_0_or_out = overtime_delay1_i;
overtime_delay2_i_0_reg_input = overtime_delay2_i_0_or_out;
overtime_delay2_i_0 = DFFE(overtime_delay2_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--overtime_delay3_i_0 is overtime_delay3_i_0
overtime_delay3_i_0_or_out = overtime_delay2_i_0;
overtime_delay3_i_0_reg_input = overtime_delay3_i_0_or_out;
overtime_delay3_i_0 = DFFE(overtime_delay3_i_0_reg_input, GLOBAL(clk), GLOBAL(nReset), , );


--wigend_bitcnt_1_ is wigend_bitcnt_1_
wigend_bitcnt_1__p0_out = !overtime_delay3_i_0 & !wigend_bitcnt_0_ & wigend_bitcnt_1_ & !wigend_bitcnt_4_;
wigend_bitcnt_1__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_1_;
wigend_bitcnt_1__p2_out = !overtime_delay3_i_0 & !wigend_bitcnt_0_ & wigend_bitcnt_1_ & wigend_bitcnt_2_;
wigend_bitcnt_1__p4_out = !overtime_delay3_i_0 & !wigend_bitcnt_0_ & wigend_bitcnt_1_ & !wigend_bitcnt_3_;
wigend_bitcnt_1__or_out = wigend_bitcnt_1__p0_out # wigend_bitcnt_1__p1_out # wigend_bitcnt_1__p2_out # wigend_bitcnt_1__p4_out;
wigend_bitcnt_1__reg_input = wigend_bitcnt_1__or_out;
wigend_bitcnt_1_ = DFFE(wigend_bitcnt_1__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_bitcnt_2_ is wigend_bitcnt_2_
wigend_bitcnt_2__p0_out = !overtime_delay3_i_0 & !wigend_bitcnt_0_ & wigend_bitcnt_2_;
wigend_bitcnt_2__p1_out = wigend_bitcnt_1_ & !wigend_bitcnt_3_ & !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_;
wigend_bitcnt_2__p2_out = wigend_bitcnt_1_ & !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & !wigend_bitcnt_4_;
wigend_bitcnt_2__p4_out = !wigend_bitcnt_1_ & !overtime_delay3_i_0 & wigend_bitcnt_2_;
wigend_bitcnt_2__or_out = wigend_bitcnt_2__p0_out # wigend_bitcnt_2__p1_out # wigend_bitcnt_2__p2_out # wigend_bitcnt_2__p4_out;
wigend_bitcnt_2__reg_input = wigend_bitcnt_2__or_out;
wigend_bitcnt_2_ = DFFE(wigend_bitcnt_2__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_bitcnt_4_ is wigend_bitcnt_4_
wigend_bitcnt_4__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_1_;
wigend_bitcnt_4__p2_out = overtime_delay3_i_0 & wigend_bitcnt_4_;
wigend_bitcnt_4__p4_out = !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_1_ & wigend_bitcnt_4_;
wigend_bitcnt_4__or_out = wigend_bitcnt_4__p1_out # wigend_bitcnt_4__p2_out # wigend_bitcnt_4__p4_out;
wigend_bitcnt_4__reg_input = wigend_bitcnt_4__or_out;
wigend_bitcnt_4_ = TFFE(wigend_bitcnt_4__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_bitcnt_3_ is wigend_bitcnt_3_
wigend_bitcnt_3__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_2_ & wigend_bitcnt_1_ & wigend_bitcnt_0_;
wigend_bitcnt_3__p2_out = !wigend_bitcnt_2_ & wigend_bitcnt_1_ & wigend_bitcnt_4_ & wigend_bitcnt_3_;
wigend_bitcnt_3__p4_out = overtime_delay3_i_0 & wigend_bitcnt_3_;
wigend_bitcnt_3__or_out = wigend_bitcnt_3__p1_out # wigend_bitcnt_3__p2_out # wigend_bitcnt_3__p4_out;
wigend_bitcnt_3__reg_input = wigend_bitcnt_3__or_out;
wigend_bitcnt_3_ = TFFE(wigend_bitcnt_3__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--eint11_i is eint11_i
eint11_i_p1_out = wigend_bitcnt_3_ & wigend_bitcnt_4_ & wigend_bitcnt_1_ & !wigend_bitcnt_2_;
eint11_i_p2_out = wigend_bitcnt_3_ & wigend_bitcnt_4_ & wigend_bitcnt_2_ & !eint11_i;
eint11_i_or_out = eint11_i_p1_out # eint11_i_p2_out;
eint11_i_reg_input = !(eint11_i_or_out);
eint11_i = DFFE(eint11_i_reg_input, !wil_clk_i_0, , nReset, );


--wigend_bitcnt_0_ is wigend_bitcnt_0_
wigend_bitcnt_0__p1_out = wigend_bitcnt_1_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & !overtime_delay3_i_0;
wigend_bitcnt_0__p2_out = !overtime_delay3_i_0 & wigend_bitcnt_0_;
wigend_bitcnt_0__or_out = wigend_bitcnt_0__p1_out # wigend_bitcnt_0__p2_out;
wigend_bitcnt_0__reg_input = !(wigend_bitcnt_0__or_out);
wigend_bitcnt_0_ = DFFE(wigend_bitcnt_0__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--un1_wigend_buf56_i is un1_wigend_buf56_i
un1_wigend_buf56_i_p1_out = wil_clk_tmp_i_0 & overtime_delay3_i_0;
un1_wigend_buf56_i_p2_out = wil_clk_tmp_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_;
un1_wigend_buf56_i_or_out = un1_wigend_buf56_i_p1_out # un1_wigend_buf56_i_p2_out;
un1_wigend_buf56_i = un1_wigend_buf56_i_or_out;


--wigend_buf_0_ is wigend_buf_0_
wigend_buf_0__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_0__p2_out = wil_clk_tmp_i_0 & !wil1_i_0;
wigend_buf_0__p4_out = !wil_clk_tmp_i_0 & !wigend_buf_0_;
wigend_buf_0__or_out = wigend_buf_0__p1_out # wigend_buf_0__p2_out # wigend_buf_0__p4_out;
wigend_buf_0__reg_input = !(wigend_buf_0__or_out);
wigend_buf_0_ = DFFE(wigend_buf_0__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_0_ is wigend_reg_0_
wigend_reg_0__p1_out = !overtime_delay3_i_0 & wil1_i_0 & un1_wigend_buf56_i;
wigend_reg_0__p2_out = !un1_wigend_buf56_i & wigend_reg_0_;
wigend_reg_0__or_out = wigend_reg_0__p1_out # wigend_reg_0__p2_out;
wigend_reg_0__reg_input = wigend_reg_0__or_out;
wigend_reg_0_ = DFFE(wigend_reg_0__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--C1L1 is s_or2:G_61_0|OUT~14
C1L1_p1_out = overtime_delay3_i_0 & wil1_i_0;
C1L1_p2_out = overtime_delay3_i_0 & wil0_i_0;
C1L1_or_out = C1L1_p1_out # C1L1_p2_out;
C1L1 = C1L1_or_out;


--wigend_buf_1_ is wigend_buf_1_
wigend_buf_1__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_1_;
wigend_buf_1__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_1__p2_out = wil_clk_tmp_i_0 & !wigend_buf_0_;
wigend_buf_1__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_1__or_out = wigend_buf_1__p0_out # wigend_buf_1__p1_out # wigend_buf_1__p2_out # wigend_buf_1__p4_out;
wigend_buf_1__reg_input = !(wigend_buf_1__or_out);
wigend_buf_1_ = DFFE(wigend_buf_1__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_1_ is wigend_reg_1_
wigend_reg_1__p1_out = !overtime_delay3_i_0 & wigend_buf_0_ & un1_wigend_buf56_i;
wigend_reg_1__p2_out = !un1_wigend_buf56_i & wigend_reg_1_;
wigend_reg_1__or_out = wigend_reg_1__p1_out # wigend_reg_1__p2_out;
wigend_reg_1__reg_input = wigend_reg_1__or_out;
wigend_reg_1_ = DFFE(wigend_reg_1__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_2_ is wigend_buf_2_
wigend_buf_2__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_2_;
wigend_buf_2__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_2__p2_out = wil_clk_tmp_i_0 & !wigend_buf_1_;
wigend_buf_2__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_2__or_out = wigend_buf_2__p0_out # wigend_buf_2__p1_out # wigend_buf_2__p2_out # wigend_buf_2__p4_out;
wigend_buf_2__reg_input = !(wigend_buf_2__or_out);
wigend_buf_2_ = DFFE(wigend_buf_2__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_2_ is wigend_reg_2_
wigend_reg_2__p1_out = !overtime_delay3_i_0 & wigend_buf_1_ & un1_wigend_buf56_i;
wigend_reg_2__p2_out = !un1_wigend_buf56_i & wigend_reg_2_;
wigend_reg_2__or_out = wigend_reg_2__p1_out # wigend_reg_2__p2_out;
wigend_reg_2__reg_input = wigend_reg_2__or_out;
wigend_reg_2_ = DFFE(wigend_reg_2__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_3_ is wigend_buf_3_
wigend_buf_3__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_3_;
wigend_buf_3__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_3__p2_out = wil_clk_tmp_i_0 & !wigend_buf_2_;
wigend_buf_3__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_3__or_out = wigend_buf_3__p0_out # wigend_buf_3__p1_out # wigend_buf_3__p2_out # wigend_buf_3__p4_out;
wigend_buf_3__reg_input = !(wigend_buf_3__or_out);
wigend_buf_3_ = DFFE(wigend_buf_3__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_3_ is wigend_reg_3_
wigend_reg_3__p1_out = !overtime_delay3_i_0 & wigend_buf_2_ & un1_wigend_buf56_i;
wigend_reg_3__p2_out = !un1_wigend_buf56_i & wigend_reg_3_;
wigend_reg_3__or_out = wigend_reg_3__p1_out # wigend_reg_3__p2_out;
wigend_reg_3__reg_input = wigend_reg_3__or_out;
wigend_reg_3_ = DFFE(wigend_reg_3__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_4_ is wigend_buf_4_
wigend_buf_4__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_4_;
wigend_buf_4__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_4__p2_out = wil_clk_tmp_i_0 & !wigend_buf_3_;
wigend_buf_4__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_4__or_out = wigend_buf_4__p0_out # wigend_buf_4__p1_out # wigend_buf_4__p2_out # wigend_buf_4__p4_out;
wigend_buf_4__reg_input = !(wigend_buf_4__or_out);
wigend_buf_4_ = DFFE(wigend_buf_4__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_4_ is wigend_reg_4_
wigend_reg_4__p1_out = !overtime_delay3_i_0 & wigend_buf_3_ & un1_wigend_buf56_i;
wigend_reg_4__p2_out = !un1_wigend_buf56_i & wigend_reg_4_;
wigend_reg_4__or_out = wigend_reg_4__p1_out # wigend_reg_4__p2_out;
wigend_reg_4__reg_input = wigend_reg_4__or_out;
wigend_reg_4_ = DFFE(wigend_reg_4__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_5_ is wigend_buf_5_
wigend_buf_5__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_5_;
wigend_buf_5__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_5__p2_out = wil_clk_tmp_i_0 & !wigend_buf_4_;
wigend_buf_5__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_5__or_out = wigend_buf_5__p0_out # wigend_buf_5__p1_out # wigend_buf_5__p2_out # wigend_buf_5__p4_out;
wigend_buf_5__reg_input = !(wigend_buf_5__or_out);
wigend_buf_5_ = DFFE(wigend_buf_5__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_5_ is wigend_reg_5_
wigend_reg_5__p1_out = !overtime_delay3_i_0 & wigend_buf_4_ & un1_wigend_buf56_i;
wigend_reg_5__p2_out = !un1_wigend_buf56_i & wigend_reg_5_;
wigend_reg_5__or_out = wigend_reg_5__p1_out # wigend_reg_5__p2_out;
wigend_reg_5__reg_input = wigend_reg_5__or_out;
wigend_reg_5_ = DFFE(wigend_reg_5__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_6_ is wigend_buf_6_
wigend_buf_6__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_6_;
wigend_buf_6__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_6__p2_out = wil_clk_tmp_i_0 & !wigend_buf_5_;
wigend_buf_6__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_6__or_out = wigend_buf_6__p0_out # wigend_buf_6__p1_out # wigend_buf_6__p2_out # wigend_buf_6__p4_out;
wigend_buf_6__reg_input = !(wigend_buf_6__or_out);
wigend_buf_6_ = DFFE(wigend_buf_6__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_6_ is wigend_reg_6_
wigend_reg_6__p1_out = !overtime_delay3_i_0 & wigend_buf_5_ & un1_wigend_buf56_i;
wigend_reg_6__p2_out = !un1_wigend_buf56_i & wigend_reg_6_;
wigend_reg_6__or_out = wigend_reg_6__p1_out # wigend_reg_6__p2_out;
wigend_reg_6__reg_input = wigend_reg_6__or_out;
wigend_reg_6_ = DFFE(wigend_reg_6__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_7_ is wigend_buf_7_
wigend_buf_7__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_7_;
wigend_buf_7__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_7__p2_out = wil_clk_tmp_i_0 & !wigend_buf_6_;
wigend_buf_7__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_7__or_out = wigend_buf_7__p0_out # wigend_buf_7__p1_out # wigend_buf_7__p2_out # wigend_buf_7__p4_out;
wigend_buf_7__reg_input = !(wigend_buf_7__or_out);
wigend_buf_7_ = DFFE(wigend_buf_7__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_7_ is wigend_reg_7_
wigend_reg_7__p1_out = !overtime_delay3_i_0 & wigend_buf_6_ & un1_wigend_buf56_i;
wigend_reg_7__p2_out = !un1_wigend_buf56_i & wigend_reg_7_;
wigend_reg_7__or_out = wigend_reg_7__p1_out # wigend_reg_7__p2_out;
wigend_reg_7__reg_input = wigend_reg_7__or_out;
wigend_reg_7_ = DFFE(wigend_reg_7__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_8_ is wigend_buf_8_
wigend_buf_8__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_8_;
wigend_buf_8__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_8__p2_out = wil_clk_tmp_i_0 & !wigend_buf_7_;
wigend_buf_8__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_8__or_out = wigend_buf_8__p0_out # wigend_buf_8__p1_out # wigend_buf_8__p2_out # wigend_buf_8__p4_out;
wigend_buf_8__reg_input = !(wigend_buf_8__or_out);
wigend_buf_8_ = DFFE(wigend_buf_8__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_8_ is wigend_reg_8_
wigend_reg_8__p1_out = !overtime_delay3_i_0 & wigend_buf_7_ & un1_wigend_buf56_i;
wigend_reg_8__p2_out = !un1_wigend_buf56_i & wigend_reg_8_;
wigend_reg_8__or_out = wigend_reg_8__p1_out # wigend_reg_8__p2_out;
wigend_reg_8__reg_input = wigend_reg_8__or_out;
wigend_reg_8_ = DFFE(wigend_reg_8__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_9_ is wigend_buf_9_
wigend_buf_9__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_9_;
wigend_buf_9__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_9__p2_out = wil_clk_tmp_i_0 & !wigend_buf_8_;
wigend_buf_9__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_9__or_out = wigend_buf_9__p0_out # wigend_buf_9__p1_out # wigend_buf_9__p2_out # wigend_buf_9__p4_out;
wigend_buf_9__reg_input = !(wigend_buf_9__or_out);
wigend_buf_9_ = DFFE(wigend_buf_9__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_9_ is wigend_reg_9_
wigend_reg_9__p1_out = !overtime_delay3_i_0 & wigend_buf_8_ & un1_wigend_buf56_i;
wigend_reg_9__p2_out = !un1_wigend_buf56_i & wigend_reg_9_;
wigend_reg_9__or_out = wigend_reg_9__p1_out # wigend_reg_9__p2_out;
wigend_reg_9__reg_input = wigend_reg_9__or_out;
wigend_reg_9_ = DFFE(wigend_reg_9__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_10_ is wigend_buf_10_
wigend_buf_10__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_10_;
wigend_buf_10__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_10__p2_out = wil_clk_tmp_i_0 & !wigend_buf_9_;
wigend_buf_10__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_10__or_out = wigend_buf_10__p0_out # wigend_buf_10__p1_out # wigend_buf_10__p2_out # wigend_buf_10__p4_out;
wigend_buf_10__reg_input = !(wigend_buf_10__or_out);
wigend_buf_10_ = DFFE(wigend_buf_10__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_10_ is wigend_reg_10_
wigend_reg_10__p1_out = !overtime_delay3_i_0 & wigend_buf_9_ & un1_wigend_buf56_i;
wigend_reg_10__p2_out = !un1_wigend_buf56_i & wigend_reg_10_;
wigend_reg_10__or_out = wigend_reg_10__p1_out # wigend_reg_10__p2_out;
wigend_reg_10__reg_input = wigend_reg_10__or_out;
wigend_reg_10_ = DFFE(wigend_reg_10__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_11_ is wigend_buf_11_
wigend_buf_11__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_11_;
wigend_buf_11__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_11__p2_out = wil_clk_tmp_i_0 & !wigend_buf_10_;
wigend_buf_11__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_11__or_out = wigend_buf_11__p0_out # wigend_buf_11__p1_out # wigend_buf_11__p2_out # wigend_buf_11__p4_out;
wigend_buf_11__reg_input = !(wigend_buf_11__or_out);
wigend_buf_11_ = DFFE(wigend_buf_11__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_11_ is wigend_reg_11_
wigend_reg_11__p1_out = !overtime_delay3_i_0 & wigend_buf_10_ & un1_wigend_buf56_i;
wigend_reg_11__p2_out = !un1_wigend_buf56_i & wigend_reg_11_;
wigend_reg_11__or_out = wigend_reg_11__p1_out # wigend_reg_11__p2_out;
wigend_reg_11__reg_input = wigend_reg_11__or_out;
wigend_reg_11_ = DFFE(wigend_reg_11__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_12_ is wigend_buf_12_
wigend_buf_12__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_12_;
wigend_buf_12__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_12__p2_out = wil_clk_tmp_i_0 & !wigend_buf_11_;
wigend_buf_12__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_12__or_out = wigend_buf_12__p0_out # wigend_buf_12__p1_out # wigend_buf_12__p2_out # wigend_buf_12__p4_out;
wigend_buf_12__reg_input = !(wigend_buf_12__or_out);
wigend_buf_12_ = DFFE(wigend_buf_12__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_12_ is wigend_reg_12_
wigend_reg_12__p1_out = !overtime_delay3_i_0 & wigend_buf_11_ & un1_wigend_buf56_i;
wigend_reg_12__p2_out = !un1_wigend_buf56_i & wigend_reg_12_;
wigend_reg_12__or_out = wigend_reg_12__p1_out # wigend_reg_12__p2_out;
wigend_reg_12__reg_input = wigend_reg_12__or_out;
wigend_reg_12_ = DFFE(wigend_reg_12__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_13_ is wigend_buf_13_
wigend_buf_13__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_13_;
wigend_buf_13__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_13__p2_out = wil_clk_tmp_i_0 & !wigend_buf_12_;
wigend_buf_13__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_13__or_out = wigend_buf_13__p0_out # wigend_buf_13__p1_out # wigend_buf_13__p2_out # wigend_buf_13__p4_out;
wigend_buf_13__reg_input = !(wigend_buf_13__or_out);
wigend_buf_13_ = DFFE(wigend_buf_13__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_13_ is wigend_reg_13_
wigend_reg_13__p1_out = !overtime_delay3_i_0 & wigend_buf_12_ & un1_wigend_buf56_i;
wigend_reg_13__p2_out = !un1_wigend_buf56_i & wigend_reg_13_;
wigend_reg_13__or_out = wigend_reg_13__p1_out # wigend_reg_13__p2_out;
wigend_reg_13__reg_input = wigend_reg_13__or_out;
wigend_reg_13_ = DFFE(wigend_reg_13__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_14_ is wigend_buf_14_
wigend_buf_14__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_14_;
wigend_buf_14__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_14__p2_out = wil_clk_tmp_i_0 & !wigend_buf_13_;
wigend_buf_14__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_14__or_out = wigend_buf_14__p0_out # wigend_buf_14__p1_out # wigend_buf_14__p2_out # wigend_buf_14__p4_out;
wigend_buf_14__reg_input = !(wigend_buf_14__or_out);
wigend_buf_14_ = DFFE(wigend_buf_14__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_14_ is wigend_reg_14_
wigend_reg_14__p1_out = !overtime_delay3_i_0 & wigend_buf_13_ & un1_wigend_buf56_i;
wigend_reg_14__p2_out = !un1_wigend_buf56_i & wigend_reg_14_;
wigend_reg_14__or_out = wigend_reg_14__p1_out # wigend_reg_14__p2_out;
wigend_reg_14__reg_input = wigend_reg_14__or_out;
wigend_reg_14_ = DFFE(wigend_reg_14__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_15_ is wigend_buf_15_
wigend_buf_15__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_15_;
wigend_buf_15__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_15__p2_out = wil_clk_tmp_i_0 & !wigend_buf_14_;
wigend_buf_15__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_15__or_out = wigend_buf_15__p0_out # wigend_buf_15__p1_out # wigend_buf_15__p2_out # wigend_buf_15__p4_out;
wigend_buf_15__reg_input = !(wigend_buf_15__or_out);
wigend_buf_15_ = DFFE(wigend_buf_15__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_15_ is wigend_reg_15_
wigend_reg_15__p1_out = !overtime_delay3_i_0 & wigend_buf_14_ & un1_wigend_buf56_i;
wigend_reg_15__p2_out = !un1_wigend_buf56_i & wigend_reg_15_;
wigend_reg_15__or_out = wigend_reg_15__p1_out # wigend_reg_15__p2_out;
wigend_reg_15__reg_input = wigend_reg_15__or_out;
wigend_reg_15_ = DFFE(wigend_reg_15__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_16_ is wigend_buf_16_
wigend_buf_16__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_16_;
wigend_buf_16__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_16__p2_out = wil_clk_tmp_i_0 & !wigend_buf_15_;
wigend_buf_16__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_16__or_out = wigend_buf_16__p0_out # wigend_buf_16__p1_out # wigend_buf_16__p2_out # wigend_buf_16__p4_out;
wigend_buf_16__reg_input = !(wigend_buf_16__or_out);
wigend_buf_16_ = DFFE(wigend_buf_16__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_16_ is wigend_reg_16_
wigend_reg_16__p1_out = !overtime_delay3_i_0 & wigend_buf_15_ & un1_wigend_buf56_i;
wigend_reg_16__p2_out = !un1_wigend_buf56_i & wigend_reg_16_;
wigend_reg_16__or_out = wigend_reg_16__p1_out # wigend_reg_16__p2_out;
wigend_reg_16__reg_input = wigend_reg_16__or_out;
wigend_reg_16_ = DFFE(wigend_reg_16__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_17_ is wigend_buf_17_
wigend_buf_17__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_17_;
wigend_buf_17__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_17__p2_out = wil_clk_tmp_i_0 & !wigend_buf_16_;
wigend_buf_17__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_17__or_out = wigend_buf_17__p0_out # wigend_buf_17__p1_out # wigend_buf_17__p2_out # wigend_buf_17__p4_out;
wigend_buf_17__reg_input = !(wigend_buf_17__or_out);
wigend_buf_17_ = DFFE(wigend_buf_17__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_17_ is wigend_reg_17_
wigend_reg_17__p1_out = !overtime_delay3_i_0 & wigend_buf_16_ & un1_wigend_buf56_i;
wigend_reg_17__p2_out = !un1_wigend_buf56_i & wigend_reg_17_;
wigend_reg_17__or_out = wigend_reg_17__p1_out # wigend_reg_17__p2_out;
wigend_reg_17__reg_input = wigend_reg_17__or_out;
wigend_reg_17_ = DFFE(wigend_reg_17__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_18_ is wigend_buf_18_
wigend_buf_18__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_18_;
wigend_buf_18__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_18__p2_out = wil_clk_tmp_i_0 & !wigend_buf_17_;
wigend_buf_18__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_18__or_out = wigend_buf_18__p0_out # wigend_buf_18__p1_out # wigend_buf_18__p2_out # wigend_buf_18__p4_out;
wigend_buf_18__reg_input = !(wigend_buf_18__or_out);
wigend_buf_18_ = DFFE(wigend_buf_18__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_18_ is wigend_reg_18_
wigend_reg_18__p1_out = !overtime_delay3_i_0 & wigend_buf_17_ & un1_wigend_buf56_i;
wigend_reg_18__p2_out = !un1_wigend_buf56_i & wigend_reg_18_;
wigend_reg_18__or_out = wigend_reg_18__p1_out # wigend_reg_18__p2_out;
wigend_reg_18__reg_input = wigend_reg_18__or_out;
wigend_reg_18_ = DFFE(wigend_reg_18__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_buf_19_ is wigend_buf_19_
wigend_buf_19__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_19_;
wigend_buf_19__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_19__p2_out = wil_clk_tmp_i_0 & !wigend_buf_18_;
wigend_buf_19__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_19__or_out = wigend_buf_19__p0_out # wigend_buf_19__p1_out # wigend_buf_19__p2_out # wigend_buf_19__p4_out;
wigend_buf_19__reg_input = !(wigend_buf_19__or_out);
wigend_buf_19_ = DFFE(wigend_buf_19__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_19_ is wigend_reg_19_
wigend_reg_19__p1_out = !overtime_delay3_i_0 & wigend_buf_18_ & un1_wigend_buf56_i;
wigend_reg_19__p2_out = !un1_wigend_buf56_i & wigend_reg_19_;
wigend_reg_19__or_out = wigend_reg_19__p1_out # wigend_reg_19__p2_out;
wigend_reg_19__reg_input = wigend_reg_19__or_out;
wigend_reg_19_ = DFFE(wigend_reg_19__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L95 is un1_wigend_reg_3_i_i_5_~9
A1L95_p1_out = wigend_reg_10_ & !addr[4] & !addr[2];
A1L95_p2_out = !addr[4] & addr[2] & !addr[3] & wigend_reg_2_;
A1L95_p3_out = !addr[4] & addr[2] & addr[3] & wigend_reg_18_;
A1L95_or_out = A1L95_p1_out # A1L95_p2_out # A1L95_p3_out;
A1L95 = A1L95_or_out;


--wigend_buf_20_ is wigend_buf_20_
wigend_buf_20__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_20_;
wigend_buf_20__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_20__p2_out = wil_clk_tmp_i_0 & !wigend_buf_19_;
wigend_buf_20__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_20__or_out = wigend_buf_20__p0_out # wigend_buf_20__p1_out # wigend_buf_20__p2_out # wigend_buf_20__p4_out;
wigend_buf_20__reg_input = !(wigend_buf_20__or_out);
wigend_buf_20_ = DFFE(wigend_buf_20__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_20_ is wigend_reg_20_
wigend_reg_20__p1_out = !overtime_delay3_i_0 & wigend_buf_19_ & un1_wigend_buf56_i;
wigend_reg_20__p2_out = !un1_wigend_buf56_i & wigend_reg_20_;
wigend_reg_20__or_out = wigend_reg_20__p1_out # wigend_reg_20__p2_out;
wigend_reg_20__reg_input = wigend_reg_20__or_out;
wigend_reg_20_ = DFFE(wigend_reg_20__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L85 is un1_wigend_reg_3_i_i_4_~9
A1L85_p1_out = addr[2] & !addr[3] & !addr[4] & wigend_reg_3_;
A1L85_p2_out = addr[2] & addr[3] & !addr[4] & wigend_reg_19_;
A1L85_p3_out = !addr[2] & !addr[4] & wigend_reg_11_;
A1L85_or_out = A1L85_p1_out # A1L85_p2_out # A1L85_p3_out;
A1L85 = A1L85_or_out;


--wigend_buf_21_ is wigend_buf_21_
wigend_buf_21__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_21_;
wigend_buf_21__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_21__p2_out = wil_clk_tmp_i_0 & !wigend_buf_20_;
wigend_buf_21__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_21__or_out = wigend_buf_21__p0_out # wigend_buf_21__p1_out # wigend_buf_21__p2_out # wigend_buf_21__p4_out;
wigend_buf_21__reg_input = !(wigend_buf_21__or_out);
wigend_buf_21_ = DFFE(wigend_buf_21__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_21_ is wigend_reg_21_
wigend_reg_21__p1_out = !overtime_delay3_i_0 & wigend_buf_20_ & un1_wigend_buf56_i;
wigend_reg_21__p2_out = !un1_wigend_buf56_i & wigend_reg_21_;
wigend_reg_21__or_out = wigend_reg_21__p1_out # wigend_reg_21__p2_out;
wigend_reg_21__reg_input = wigend_reg_21__or_out;
wigend_reg_21_ = DFFE(wigend_reg_21__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L75 is un1_wigend_reg_3_i_i_3_~9
A1L75_p1_out = addr[2] & !addr[3] & !addr[4] & wigend_reg_4_;
A1L75_p2_out = addr[2] & addr[3] & !addr[4] & wigend_reg_20_;
A1L75_p3_out = !addr[2] & !addr[4] & wigend_reg_12_;
A1L75_or_out = A1L75_p1_out # A1L75_p2_out # A1L75_p3_out;
A1L75 = A1L75_or_out;


--wigend_buf_22_ is wigend_buf_22_
wigend_buf_22__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_22_;
wigend_buf_22__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_22__p2_out = wil_clk_tmp_i_0 & !wigend_buf_21_;
wigend_buf_22__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_22__or_out = wigend_buf_22__p0_out # wigend_buf_22__p1_out # wigend_buf_22__p2_out # wigend_buf_22__p4_out;
wigend_buf_22__reg_input = !(wigend_buf_22__or_out);
wigend_buf_22_ = DFFE(wigend_buf_22__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_22_ is wigend_reg_22_
wigend_reg_22__p1_out = !overtime_delay3_i_0 & wigend_buf_21_ & un1_wigend_buf56_i;
wigend_reg_22__p2_out = !un1_wigend_buf56_i & wigend_reg_22_;
wigend_reg_22__or_out = wigend_reg_22__p1_out # wigend_reg_22__p2_out;
wigend_reg_22__reg_input = wigend_reg_22__or_out;
wigend_reg_22_ = DFFE(wigend_reg_22__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L65 is un1_wigend_reg_3_i_i_2_~9
A1L65_p1_out = addr[2] & !addr[3] & !addr[4] & wigend_reg_5_;
A1L65_p2_out = addr[2] & addr[3] & !addr[4] & wigend_reg_21_;
A1L65_p3_out = !addr[2] & !addr[4] & wigend_reg_13_;
A1L65_or_out = A1L65_p1_out # A1L65_p2_out # A1L65_p3_out;
A1L65 = A1L65_or_out;


--wigend_buf_23_ is wigend_buf_23_
wigend_buf_23__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_23_;
wigend_buf_23__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_23__p2_out = wil_clk_tmp_i_0 & !wigend_buf_22_;
wigend_buf_23__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_23__or_out = wigend_buf_23__p0_out # wigend_buf_23__p1_out # wigend_buf_23__p2_out # wigend_buf_23__p4_out;
wigend_buf_23__reg_input = !(wigend_buf_23__or_out);
wigend_buf_23_ = DFFE(wigend_buf_23__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_23_ is wigend_reg_23_
wigend_reg_23__p1_out = !overtime_delay3_i_0 & wigend_buf_22_ & un1_wigend_buf56_i;
wigend_reg_23__p2_out = !un1_wigend_buf56_i & wigend_reg_23_;
wigend_reg_23__or_out = wigend_reg_23__p1_out # wigend_reg_23__p2_out;
wigend_reg_23__reg_input = wigend_reg_23__or_out;
wigend_reg_23_ = DFFE(wigend_reg_23__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L55 is un1_wigend_reg_3_i_i_1_~9
A1L55_p1_out = addr[2] & !addr[3] & !addr[4] & wigend_reg_6_;
A1L55_p2_out = addr[2] & addr[3] & !addr[4] & wigend_reg_22_;
A1L55_p3_out = !addr[2] & !addr[4] & wigend_reg_14_;
A1L55_or_out = A1L55_p1_out # A1L55_p2_out # A1L55_p3_out;
A1L55 = A1L55_or_out;


--wigend_buf_24_ is wigend_buf_24_
wigend_buf_24__p0_out = !wil_clk_tmp_i_0 & !wigend_buf_24_;
wigend_buf_24__p1_out = !overtime_delay3_i_0 & wigend_bitcnt_0_ & !wigend_bitcnt_2_ & wigend_bitcnt_3_ & wigend_bitcnt_4_ & wil_clk_tmp_i_0;
wigend_buf_24__p2_out = wil_clk_tmp_i_0 & !wigend_buf_23_;
wigend_buf_24__p4_out = wil_clk_tmp_i_0 & C1L1;
wigend_buf_24__or_out = wigend_buf_24__p0_out # wigend_buf_24__p1_out # wigend_buf_24__p2_out # wigend_buf_24__p4_out;
wigend_buf_24__reg_input = !(wigend_buf_24__or_out);
wigend_buf_24_ = DFFE(wigend_buf_24__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--wigend_reg_24_ is wigend_reg_24_
wigend_reg_24__p1_out = !overtime_delay3_i_0 & wigend_buf_23_ & un1_wigend_buf56_i;
wigend_reg_24__p2_out = !un1_wigend_buf56_i & wigend_reg_24_;
wigend_reg_24__or_out = wigend_reg_24__p1_out # wigend_reg_24__p2_out;
wigend_reg_24__reg_input = wigend_reg_24__or_out;
wigend_reg_24_ = DFFE(wigend_reg_24__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L45 is un1_wigend_reg_3_i_i_0_~9
A1L45_p1_out = addr[2] & !addr[3] & !addr[4] & wigend_reg_7_;
A1L45_p2_out = addr[2] & addr[3] & !addr[4] & wigend_reg_23_;
A1L45_p3_out = !addr[2] & !addr[4] & wigend_reg_15_;
A1L45_or_out = A1L45_p1_out # A1L45_p2_out # A1L45_p3_out;
A1L45 = A1L45_or_out;


--wigend_reg_25_ is wigend_reg_25_
wigend_reg_25__p1_out = !overtime_delay3_i_0 & wigend_buf_24_ & un1_wigend_buf56_i;
wigend_reg_25__p2_out = !un1_wigend_buf56_i & wigend_reg_25_;
wigend_reg_25__or_out = wigend_reg_25__p1_out # wigend_reg_25__p2_out;
wigend_reg_25__reg_input = wigend_reg_25__or_out;
wigend_reg_25_ = DFFE(wigend_reg_25__reg_input, wil_clk_i_0, GLOBAL(nReset), , );


--A1L16 is un1_wigend_reg_3_i_i_7_~11
A1L16_p1_out = !addr[4] & addr[2] & !addr[3] & wigend_reg_0_;
A1L16_p2_out = !addr[4] & addr[2] & addr[3] & wigend_reg_16_;
A1L16_p3_out = !addr[4] & !addr[2] & wigend_reg_8_;
A1L16_p4_out = addr[4] & wigend_reg_24_;
A1L16_or_out = A1L16_p1_out # A1L16_p2_out # A1L16_p3_out # A1L16_p4_out;
A1L16 = A1L16_or_out;


--A1L06 is un1_wigend_reg_3_i_i_6_~11
A1L06_p1_out = !addr[4] & addr[2] & !addr[3] & wigend_reg_1_;
A1L06_p2_out = !addr[4] & addr[2] & addr[3] & wigend_reg_17_;
A1L06_p3_out = !addr[4] & !addr[2] & wigend_reg_9_;
A1L06_p4_out = addr[4] & wigend_reg_25_;
A1L06_or_out = A1L06_p1_out # A1L06_p2_out # A1L06_p3_out # A1L06_p4_out;
A1L06 = A1L06_or_out;


--A1L841 is wilclk_cnt_n0_lin~16
A1L841_p1_out = wilclk_cnt_3_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_12_ & !wilclk_cnt_0_;
A1L841_p2_out = wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_12_ & !wilclk_cnt_0_ & wilclk_cnt_4_;
A1L841_p3_out = wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_12_ & !wilclk_cnt_0_ & wilclk_cnt_5_;
A1L841 = A1L841_p1_out # A1L841_p2_out # A1L841_p3_out;


--A1L941 is wilclk_cnt_n1_lin~49
A1L941_p0_out = wilclk_cnt_12_ & wilclk_cnt_10_;
A1L941_p1_out = wilclk_cnt_3_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_12_;
A1L941_p2_out = wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_12_ & wilclk_cnt_4_;
A1L941_p3_out = wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_12_ & wilclk_cnt_5_;
A1L941_p4_out = wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_12_ & wilclk_cnt_6_;
A1L941 = A1L941_p0_out # A1L941_p1_out # A1L941_p2_out # A1L941_p3_out # A1L941_p4_out;


--A1L051 is wilclk_cnt_n2_lin~38
A1L051_p1_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_3_;
A1L051 = A1L051_p1_out;


--A1L151 is wilclk_cnt_n2_lin~40
A1L151_p0_out = wilclk_cnt_12_ & wilclk_cnt_11_;
A1L151_p1_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_4_;
A1L151_p2_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_5_;
A1L151_p3_out = wilclk_cnt_12_ & wilclk_cnt_7_ & wilclk_cnt_8_ & wilclk_cnt_9_ & wilclk_cnt_6_;
A1L151_p4_out = wilclk_cnt_12_ & wilclk_cnt_10_;
A1L151 = A1L051 # A1L151_p0_out # A1L151_p1_out # A1L151_p2_out # A1L151_p3_out # A1L151_p4_out;


--A1L351 is wilclk_cnt_n4_lin~28
A1L351_p0_out = !wilclk_cnt_3_ & !wilclk_cnt_4_;
A1L351_p1_out = wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_ & wilclk_cnt_4_;
A1L351_p2_out = !wilclk_cnt_1_ & !wilclk_cnt_4_;
A1L351_p3_out = !wilclk_cnt_0_ & !wilclk_cnt_4_;
A1L351_p4_out = !wilclk_cnt_2_ & !wilclk_cnt_4_;
A1L351 = A1L351_p0_out # A1L351_p1_out # A1L351_p2_out # A1L351_p3_out # A1L351_p4_out;


--A1L451 is wilclk_cnt_n5_lin~40
A1L451_p1_out = !wilclk_cnt_3_ & !wilclk_cnt_5_;
A1L451 = A1L451_p1_out;


--A1L551 is wilclk_cnt_n5_lin~42
A1L551_p0_out = !wilclk_cnt_5_ & !wilclk_cnt_2_;
A1L551_p1_out = wilclk_cnt_12_ & wilclk_cnt_10_;
A1L551_p2_out = wilclk_cnt_4_ & wilclk_cnt_5_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L551_p3_out = !wilclk_cnt_5_ & !wilclk_cnt_1_;
A1L551_p4_out = !wilclk_cnt_5_ & !wilclk_cnt_0_;
A1L551 = A1L451 # A1L551_p0_out # A1L551_p1_out # A1L551_p2_out # A1L551_p3_out # A1L551_p4_out;


--A1L651 is wilclk_cnt_n6_lin~42
A1L651_p1_out = !wilclk_cnt_2_ & !wilclk_cnt_6_;
A1L651_p2_out = !wilclk_cnt_6_ & !wilclk_cnt_3_;
A1L651 = A1L651_p1_out # A1L651_p2_out;


--A1L751 is wilclk_cnt_n6_lin~45
A1L751_p0_out = !wilclk_cnt_6_ & !wilclk_cnt_0_;
A1L751_p1_out = !wilclk_cnt_5_ & !wilclk_cnt_6_;
A1L751_p2_out = wilclk_cnt_12_ & wilclk_cnt_11_;
A1L751_p3_out = wilclk_cnt_5_ & wilclk_cnt_6_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_;
A1L751_p4_out = !wilclk_cnt_6_ & !wilclk_cnt_1_;
A1L751 = A1L651 # A1L751_p0_out # A1L751_p1_out # A1L751_p2_out # A1L751_p3_out # A1L751_p4_out;


--A1L261 is wilclk_cnt_n11_lin~27
A1L261_p1_out = wilclk_cnt_10_ & wilclk_cnt_9_ & wilclk_cnt_8_ & wilclk_cnt_7_ & wilclk_cnt_6_ & wilclk_cnt_5_ & wilclk_cnt_4_ & wilclk_cnt_3_ & wilclk_cnt_2_ & wilclk_cnt_0_ & wilclk_cnt_1_ & wilclk_cnt_11_;
A1L261 = A1L261_p1_out;


--A1L161 is wilclk_cnt_n10_lin~49
A1L161_p1_out = wilclk_cnt_12_ & wilclk_cnt_10_;
A1L161 = A1L161_p1_out;


--~VCC~0 is ~VCC~0
~VCC~0_or_out = GND;
~VCC~0 = !(~VCC~0_or_out);


--~VCC~1 is ~VCC~1
~VCC~1_or_out = GND;
~VCC~1 = !(~VCC~1_or_out);


--addr[2] is addr[2]
--operation mode is input

addr[2] = INPUT();


--addr[3] is addr[3]
--operation mode is input

addr[3] = INPUT();


--addr[4] is addr[4]
--operation mode is input

addr[4] = INPUT();


--addr[5] is addr[5]
--operation mode is input

addr[5] = INPUT();


--addr[6] is addr[6]
--operation mode is input

addr[6] = INPUT();


--addr[7] is addr[7]
--operation mode is input

addr[7] = INPUT();


--addr[8] is addr[8]
--operation mode is input

addr[8] = INPUT();


--clk is clk
--operation mode is input

clk = INPUT();


--clock is clock
--operation mode is input

clock = INPUT();


--hpirdy is hpirdy
--operation mode is input

hpirdy = INPUT();


--nFCE is nFCE
--operation mode is input

nFCE = INPUT();


--nFRE is nFRE
--operation mode is input

nFRE = INPUT();


--nFWE is nFWE
--operation mode is input

nFWE = INPUT();


--nGCS[0] is nGCS[0]
--operation mode is input

nGCS[0] = INPUT();


--nGCS[1] is nGCS[1]
--operation mode is input

nGCS[1] = INPUT();


--nGCS[2] is nGCS[2]
--operation mode is input

nGCS[2] = INPUT();


--nGCS[3] is nGCS[3]
--operation mode is input

nGCS[3] = INPUT();


--nGCS[4] is nGCS[4]
--operation mode is input

nGCS[4] = INPUT();


--nGCS[5] is nGCS[5]
--operation mode is input

nGCS[5] = INPUT();


--nOE is nOE
--operation mode is input

nOE = INPUT();


--nReset is nReset
--operation mode is input

nReset = INPUT();


--nWE is nWE
--operation mode is input

nWE = INPUT();


--vp2clk0 is vp2clk0
--operation mode is input

vp2clk0 = INPUT();


--vp2clk1 is vp2clk1
--operation mode is input

vp2clk1 = INPUT();


--vp2ctl0 is vp2ctl0
--operation mode is input

vp2ctl0 = INPUT();


--vp2ctl1 is vp2ctl1
--operation mode is input

vp2ctl1 = INPUT();


--vp2ctl2 is vp2ctl2
--operation mode is input

vp2ctl2 = INPUT();


--wil[0] is wil[0]
--operation mode is input

wil[0] = INPUT();


--wil[1] is wil[1]
--operation mode is input

wil[1] = INPUT();


--Hs is Hs
--operation mode is output

Hs = OUTPUT(~VCC~0);


--Vs is Vs
--operation mode is output

Vs = OUTPUT(~VCC~1);


--clkout is clkout
--operation mode is output

clkout = OUTPUT(A1L61);


--De is De
--operation mode is output

De = OUTPUT(A1L86);


--nWAIT is nWAIT
--operation mode is output

nWAIT = OUTPUT(A1L03);


--vCLK is vCLK
--operation mode is output

vCLK = OUTPUT(A1L66);


--BUFDIR is BUFDIR
--operation mode is output

BUFDIR = OUTPUT(A1L21);


--BUFDIR1 is BUFDIR1
--operation mode is output

BUFDIR1 = OUTPUT(A1L11);


--nEXTBUS is nEXTBUS
--operation mode is output

nEXTBUS = OUTPUT(A1L33);


--eint11 is eint11
--operation mode is output

eint11 = OUTPUT(eint11_i);


--data[2] is data[2]
--operation mode is output

data[2]_tri_out = TRI(A1L95, un1_nGCS_i_0_);
data[2] = OUTPUT(data[2]_tri_out);


--data[3] is data[3]
--operation mode is output

data[3]_tri_out = TRI(A1L85, un1_nGCS_i_0_);
data[3] = OUTPUT(data[3]_tri_out);


--data[4] is data[4]
--operation mode is output

data[4]_tri_out = TRI(A1L75, un1_nGCS_i_0_);
data[4] = OUTPUT(data[4]_tri_out);


--data[5] is data[5]
--operation mode is output

data[5]_tri_out = TRI(A1L65, un1_nGCS_i_0_);
data[5] = OUTPUT(data[5]_tri_out);


--data[6] is data[6]
--operation mode is output

data[6]_tri_out = TRI(A1L55, un1_nGCS_i_0_);
data[6] = OUTPUT(data[6]_tri_out);


--data[7] is data[7]
--operation mode is output

data[7]_tri_out = TRI(A1L45, un1_nGCS_i_0_);
data[7] = OUTPUT(data[7]_tri_out);


--data[0] is data[0]
--operation mode is output

data[0]_tri_out = TRI(A1L16, un1_nGCS_i_0_);
data[0] = OUTPUT(data[0]_tri_out);


--data[1] is data[1]
--operation mode is output

data[1]_tri_out = TRI(A1L06, un1_nGCS_i_0_);
data[1] = OUTPUT(data[1]_tri_out);


